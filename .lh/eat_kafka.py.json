{
    "sourceFile": "eat_kafka.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1647309458087,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1647309671158,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,4 +10,5 @@\n     return data\n \n if __name__ == '__main__':\n     get_data(10)\n+\n"
                },
                {
                    "date": 1647310519527,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,9 @@\n     consumer = create_consumer()\n     data = []\n     for message in tqdm(itertools.islice(consumer, n_entries)):\n         data.append(message.value)\n+        print(data)\n     return data\n \n if __name__ == '__main__':\n     get_data(10)\n"
                },
                {
                    "date": 1647310534789,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n     consumer = create_consumer()\n     data = []\n     for message in tqdm(itertools.islice(consumer, n_entries)):\n         data.append(message.value)\n-        print(data)\n+        print(message.value)\n     return data\n \n if __name__ == '__main__':\n     get_data(10)\n"
                }
            ],
            "date": 1647309458087,
            "name": "Commit-0",
            "content": "import itertools\nfrom tqdm import tqdm\n\nfrom consumer_factory import create_consumer\ndef get_data(n_entries=100):\n    consumer = create_consumer()\n    data = []\n    for message in tqdm(itertools.islice(consumer, n_entries)):\n        data.append(message.value)\n    return data\n\nif __name__ == '__main__':\n    get_data(10)\n"
        }
    ]
}